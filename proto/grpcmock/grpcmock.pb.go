// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: grpcmock/grpcmock.proto

package pbgrpcmock

import (
	code "google.golang.org/genproto/googleapis/rpc/code"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Based on google.rpc.Status with strongly-typed "code" field
type ExampleRpcStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    code.Code    `protobuf:"varint,1,opt,name=code,proto3,enum=google.rpc.Code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details []*anypb.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ExampleRpcStatus) Reset() {
	*x = ExampleRpcStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcmock_grpcmock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleRpcStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleRpcStatus) ProtoMessage() {}

func (x *ExampleRpcStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpcmock_grpcmock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleRpcStatus.ProtoReflect.Descriptor instead.
func (*ExampleRpcStatus) Descriptor() ([]byte, []int) {
	return file_grpcmock_grpcmock_proto_rawDescGZIP(), []int{0}
}

func (x *ExampleRpcStatus) GetCode() code.Code {
	if x != nil {
		return x.Code
	}
	return code.Code(0)
}

func (x *ExampleRpcStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExampleRpcStatus) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type ExampleRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Response:
	//	*ExampleRule_Status
	//	*ExampleRule_Body
	Response isExampleRule_Response `protobuf_oneof:"response"`
}

func (x *ExampleRule) Reset() {
	*x = ExampleRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpcmock_grpcmock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleRule) ProtoMessage() {}

func (x *ExampleRule) ProtoReflect() protoreflect.Message {
	mi := &file_grpcmock_grpcmock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleRule.ProtoReflect.Descriptor instead.
func (*ExampleRule) Descriptor() ([]byte, []int) {
	return file_grpcmock_grpcmock_proto_rawDescGZIP(), []int{1}
}

func (x *ExampleRule) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *ExampleRule) GetResponse() isExampleRule_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ExampleRule) GetStatus() *ExampleRpcStatus {
	if x, ok := x.GetResponse().(*ExampleRule_Status); ok {
		return x.Status
	}
	return nil
}

func (x *ExampleRule) GetBody() *anypb.Any {
	if x, ok := x.GetResponse().(*ExampleRule_Body); ok {
		return x.Body
	}
	return nil
}

type isExampleRule_Response interface {
	isExampleRule_Response()
}

type ExampleRule_Status struct {
	Status *ExampleRpcStatus `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type ExampleRule_Body struct {
	Body *anypb.Any `protobuf:"bytes,3,opt,name=body,proto3,oneof"`
}

func (*ExampleRule_Status) isExampleRule_Response() {}

func (*ExampleRule_Body) isExampleRule_Response() {}

var file_grpcmock_grpcmock_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: ([]*ExampleRule)(nil),
		Field:         1231232,
		Name:          "grpcmock.example",
		Tag:           "bytes,1231232,rep,name=example",
		Filename:      "grpcmock/grpcmock.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// repeated grpcmock.ExampleRule example = 1231232;
	E_Example = &file_grpcmock_grpcmock_proto_extTypes[0]
)

var File_grpcmock_grpcmock_proto protoreflect.FileDescriptor

var file_grpcmock_grpcmock_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x6d,
	0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x72, 0x70, 0x63, 0x6d,
	0x6f, 0x63, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8f, 0x01, 0x0a,
	0x0b, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x51,
	0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x80, 0x93, 0x4b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x63, 0x6b, 0x2e, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x42, 0x15, 0x5a, 0x13, 0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x63, 0x6b, 0x2f, 0x70, 0x62,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x63, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpcmock_grpcmock_proto_rawDescOnce sync.Once
	file_grpcmock_grpcmock_proto_rawDescData = file_grpcmock_grpcmock_proto_rawDesc
)

func file_grpcmock_grpcmock_proto_rawDescGZIP() []byte {
	file_grpcmock_grpcmock_proto_rawDescOnce.Do(func() {
		file_grpcmock_grpcmock_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpcmock_grpcmock_proto_rawDescData)
	})
	return file_grpcmock_grpcmock_proto_rawDescData
}

var file_grpcmock_grpcmock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grpcmock_grpcmock_proto_goTypes = []interface{}{
	(*ExampleRpcStatus)(nil),           // 0: grpcmock.ExampleRpcStatus
	(*ExampleRule)(nil),                // 1: grpcmock.ExampleRule
	(code.Code)(0),                     // 2: google.rpc.Code
	(*anypb.Any)(nil),                  // 3: google.protobuf.Any
	(*descriptorpb.MethodOptions)(nil), // 4: google.protobuf.MethodOptions
}
var file_grpcmock_grpcmock_proto_depIdxs = []int32{
	2, // 0: grpcmock.ExampleRpcStatus.code:type_name -> google.rpc.Code
	3, // 1: grpcmock.ExampleRpcStatus.details:type_name -> google.protobuf.Any
	0, // 2: grpcmock.ExampleRule.status:type_name -> grpcmock.ExampleRpcStatus
	3, // 3: grpcmock.ExampleRule.body:type_name -> google.protobuf.Any
	4, // 4: grpcmock.example:extendee -> google.protobuf.MethodOptions
	1, // 5: grpcmock.example:type_name -> grpcmock.ExampleRule
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_grpcmock_grpcmock_proto_init() }
func file_grpcmock_grpcmock_proto_init() {
	if File_grpcmock_grpcmock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpcmock_grpcmock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleRpcStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpcmock_grpcmock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpcmock_grpcmock_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ExampleRule_Status)(nil),
		(*ExampleRule_Body)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpcmock_grpcmock_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_grpcmock_grpcmock_proto_goTypes,
		DependencyIndexes: file_grpcmock_grpcmock_proto_depIdxs,
		MessageInfos:      file_grpcmock_grpcmock_proto_msgTypes,
		ExtensionInfos:    file_grpcmock_grpcmock_proto_extTypes,
	}.Build()
	File_grpcmock_grpcmock_proto = out.File
	file_grpcmock_grpcmock_proto_rawDesc = nil
	file_grpcmock_grpcmock_proto_goTypes = nil
	file_grpcmock_grpcmock_proto_depIdxs = nil
}
